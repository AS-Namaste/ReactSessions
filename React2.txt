Packagelock.json --- It locks the version 
npm i ---> react react-dom parcel init
npx parcel index.html ---server running

comments:
Never touch package/Node modules

HMR - Hot Module Replacement
File Watcher Algorithms(Written in C++) - Parcel uses this to understand the change that we make in JS 
Dist -- keep the folders minified for us.
npx parcel build index.html---->where will parcel push this build -->into dist folder

--Bundling,Minifying,removing console
--We should put parcel.cache in gitignore
Anything autogenerated/regenerated on server will be put inside gitignore

Transitive dependencies ----- Not just parcel

-------------------------------------------------------------------------------------------------

IGNITING OUR APP:

1. Bundlers - Webpack,Vite,Parcel
2. Webpack is used in (create-react-app)
3. Parcel is a package that we need to install for bundling.
4. React app cannot be build by itself so we use package manner to manage packages.
package.json ---> gets created after npm init.
5. STEPS: npm init --- npm i -D parcel --- npm i react --- npm i react-dom --npx parcel index.html(Entry point)
6. package.lock.json -- To know what is the exact version to use it in production
----> It locks the version of our package.
----> It maintains the integrity of running the same version in production and development using hash.
7. We can regenerate node modules using package.lock.json
8. parcel gives us server and on save it will refresh automatically.
---> Hot module Replacement ---- For refreshing on changes.
HMR (Uses File watcher algorithms and it is written in C++).
9.what is parcel-cache and dist?
When HMR happens it needs some space and so parcel cache folder is created for performing HMR
10.npx parcel build index.html --- It just builds for development and host it on the server
parcel builds all the development related things in dist folder.
11.Parcel(For best possible performance) -- Minify,clean our code,Bundling,Optimisation of Image,caching while development,compression(rename variables),
compatible with older versions(It adds polyfills),Zero config.
12. npx parcel index.html --https(for running app securely on development)
13.Auto generated items will be in git ignore.